# Generated by Django 2.1 on 2019-03-09 05:56

import collections
import datetime
import json
import pathlib

from django.db import migrations


def loaddata(apps, schema_editor):
    # We can't import the models directly as it may be a newer
    # version than this migration expects. We use the historical version.
    User = apps.get_model('webapp', 'User')
    Directors = apps.get_model('webapp', 'Directors')
    Cast = apps.get_model('webapp', 'Cast')
    Person = apps.get_model('webapp', 'Person')
    Movie = apps.get_model('webapp', 'Movie')
    Review = apps.get_model('webapp', 'Review')

    # read the JSON data
    data = (pathlib.Path(__file__).resolve().parent.parent
            / 'fixtures' / 'data.json')
    with open(data, 'rt') as f:
        records = json.load(f)

    data = collections.defaultdict(list)
    for rec in records:
        rtype = rec['model'].split('.')[-1]
        datum = rec['fields']
        if 'pk' in rec:
            datum['id'] = rec['pk']
        # convert datetime
        if rtype == 'review':
            datum['creation_time'] = datetime.datetime.fromisoformat(
                datum['creation_time'])

        data[rtype].append(datum)

    batch_size = 1000

    # bulk create all the users
    print(f"Creating {len(data['user'])} users...")
    User.objects.bulk_create(
        [User(**datum) for datum in data['user']],
        batch_size=batch_size
    )

    # bulk create all the people
    print(f"Creating {len(data['person'])} people...")
    Person.objects.bulk_create(
        [Person(**datum) for datum in data['person']],
        batch_size=batch_size
    )

    # bulk create all the movies
    print(f"Creating {len(data['movie'])} movies...")
    Movie.objects.bulk_create(
        [Movie(**datum) for datum in data['movie']],
        batch_size=batch_size
    )

    # bulk create all the reviews
    print(f"Creating {len(data['review'])} reviews...")
    Review.objects.bulk_create(
        [Review(**datum) for datum in data['review']],
        batch_size=batch_size
    )

    # bulk create all the directors
    print(f"Creating {len(data['directors'])} directors...")
    Directors.objects.bulk_create(
        [Directors(**datum) for datum in data['directors']],
        batch_size=batch_size
    )

    # bulk create all the cast
    print(f"Creating {len(data['cast'])} cast...")
    Cast.objects.bulk_create(
        [Cast(**datum) for datum in data['cast']],
        batch_size=batch_size
    )


class Migration(migrations.Migration):

    dependencies = [
        ('webapp', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(loaddata),
    ]
